rm(list=ls())
library("RPostgreSQL")
library("ggplot2")
library("scales")
library("reshape")
library("grid")
library("devtools")
library("openair")
library("gdata")
library("RColorBrewer")
library(tidyverse)
drv = dbDriver("PostgreSQL")
con = dbConnect(drv, dbname="tube_air", user="james", password="brianclough", host="10.0.4.43")
tube_colours <- c("#0099CC","#000099","#000000","#FFCC00","#868F98","#006633","#996633","#660066","#009999","#CC3333", "#CC9999")
lines_and_colours <- data.frame(line = c("Victoria", "Piccadilly", "Northern", "Circle", "Jubilee", "District", "Bakerloo", "Metropolitan", "Docklands Light Railway", "Central", "Hammersmith & City"), colour = tube_colours)
rm(tube_colours)
background_pm25 <- importKCL(site = "kc1", year = c(2014,2015,2016), pollutant = "pm25", met = FALSE,
units = "mass", extra = FALSE)
background_pm25 <- data.frame(background_pm25, day = as.Date(format(background_pm25$date)))
background_pm25 <- aggregate(pm25 ~ day, background_pm25, mean)
tube_data <- dbGetQuery(con, "
WITH  station_depths AS (
SELECT		station_depths_import.station_name,
station_depths_import.line,
station_depths_import.platform_depth,
station_info.name,
station_info.the_geom
FROM		station_depths_import
LEFT JOIN	(	SELECT		name,
line,
the_geom
FROM		station_geom_depth
GROUP BY 	name,
line,
the_geom) AS station_info
ON		station_depths_import.station_name 	= station_info.name
AND		station_depths_import.line		= station_info.line
)
SELECT		tube_pollution_mapping.species,
tube_pollution_mapping.environment,
tube_pollution_mapping.date_time,
CASE WHEN tube_pollution_mapping.species = 'PM25' THEN tube_pollution_mapping.concentration
ELSE tube_pollution_mapping.scaled_concentration
END AS concentration,
tube_pollution_mapping.tube_diary_stop,
tube_pollution_mapping.line,
station_depths.platform_depth
FROM		tube_pollution_mapping
LEFT JOIN	station_depths
ON		tube_pollution_mapping.tube_diary_stop 	= 	station_depths.station_name
AND		tube_pollution_mapping.line		=	station_depths.line
ORDER BY	tube_pollution_mapping.date_time,
tube_pollution_mapping.environment,
tube_pollution_mapping.species
")
tube_data <- data.frame(tube_data, day = as.Date(format(tube_data$date_time)))
tube_data <- merge(tube_data, background_pm25, by="day", all.x=TRUE)
# Find that concentration for 1 Feb 2016 is missing from the London Air background PM2.5 data. Need some numbers for that.
# So going to use the data from 8 Feb 2016 instead. It's the same day of the week, the week after.
tube_data[is.na(tube_data$pm25),]$pm25 <- background_pm25[background_pm25$day == '2016-02-08',]$pm25
# Now do the correction process
tube_data$corrected_concentration <- as.numeric('')
## Now adjust the data
## Now adjust the data
for (i in 1:nrow(tube_data)) {
if (tube_data[i,]$concentration > tube_data[i,]$pm25/0.44 & tube_data[i,]$species == 'PM25') {
tube_data[i,]$corrected_concentration <- (tube_data[i,]$pm25 + (tube_data[i,]$concentration - tube_data[i,]$pm25/0.44) * 1.82)
} else
{
if (tube_data[i,]$concentration <= tube_data[i,]$pm25/0.44 & tube_data[i,]$species == 'PM25') {
tube_data[i,]$corrected_concentration <-tube_data[i,]$concentration * 0.44
} else
{}
}
}
tube_data$corrected_concentration[is.na(tube_data$corrected_concentration)] <- tube_data$concentration[is.na(tube_data$corrected_concentration)]
tube_data$line <- factor(tube_data$line, levels = c("Victoria", "Piccadilly", "Northern", "Circle", "Jubilee", "District", "Bakerloo", "Metropolitan", "Docklands Light Railway", "Central", "Hammersmith & City"))
tube_data <- tube_data[order(tube_data$date_time),]
setwd("Z:/James/PhD/10 - Tube Monitoring Chapter/Results")
station_depths <- aggregate(platform_depth ~ line,
data = unique(tube_data[!is.na(tube_data$tube_diary_stop), c("tube_diary_stop", "line", "platform_depth")]),
mean)
station_concs <- aggregate(corrected_concentration ~ line+species, data = tube_data[tube_data$environment == 'CAR',], mean)
line_depth_summary <- cbind(station_depths, station_concs)
names(line_depth_summary) <- c("line", "depth", "line", "species", "concentration")
line_depth_summary <- line_depth_summary[,-1]
line_depth_summary <- line_depth_summary[line_depth_summary$line != 'Docklands Light Railway',]
rm(station_depths, station_concs)
station_depths <- aggregate(platform_depth ~ line + tube_diary_stop,
data = unique(tube_data[!is.na(tube_data$tube_diary_stop), c("tube_diary_stop", "line", "platform_depth")]),
mean)
station_concs <- aggregate(corrected_concentration ~ line + tube_diary_stop,
data = tube_data[tube_data$species == 'PM25' & tube_data$environment == 'CAR',],
mean)
station_concs
head(tube_data)
tube_data
dbGetQuery(con, 'Select * From station_locations')
dbGetQuery(con, 'Select * From underground_stations')
dbGetQuery(con, 'Select name, line, st_transform(the_geom, 4326) From underground_stations')
dbGetQuery(con, 'Select name, line, st_x(st_transform(the_geom, 4326)), st_y(st_transform(the_geom, 4326)) From underground_stations')
dbGetQuery(con, 'Select name, line, st_x(st_transform(the_geom, 4326)) as longitude, st_y(st_transform(the_geom, 4326)) as latitude From underground_stations')
station_locations <- dbGetQuery(con, 'Select name, line, st_x(st_transform(the_geom, 4326)) as longitude, st_y(st_transform(the_geom, 4326)) as latitude From underground_stations')
station_concs %>%
mutate(pm25 = round(corrected_concentration,0)) %>%
rename(station = tube_diary_stop) %>%
select(-corrected_concentration) %>%
arrange(line, station)
station_concs %>%
mutate(pm25 = round(corrected_concentration,0)) %>%
rename(station = tube_diary_stop) %>%
select(-corrected_concentration) %>%
arrange(line, station) %>%
left_join(station_locations, by = c('line' = 'line', 'name' = 'station'))
station_concs %>%
mutate(pm25 = round(corrected_concentration,0)) %>%
rename(station = tube_diary_stop) %>%
select(-corrected_concentration) %>%
arrange(line, station) %>%
left_join(station_locations, by = c('line' = 'line', 'station' = 'name'))
station_concs %>%
mutate(pm25 = round(corrected_concentration,0)) %>%
rename(station = tube_diary_stop) %>%
select(-corrected_concentration) %>%
arrange(line, station)
##########
test <- station_concs %>%
mutate(pm25 = round(corrected_concentration,0)) %>%
rename(station = tube_diary_stop) %>%
select(-corrected_concentration) %>%
arrange(line, station) %>%
left_join(station_locations, by = c('line' = 'line', 'station' = 'name'))
nrow(test)
station_locations
station_concs
nrow(station_concs)
nrow(test)
test
station_concs
station_concs[station_concs$tube_diary_stop = 'Hatton Cross',]
station_concs[station_concs$tube_diary_stop == 'Hatton Cross',]
station_locations[station_locations$name == 'Hatton Cross',]
station_locations <- dbGetQuery(con, 'Select name,
line, st_x(st_transform(the_geom, 4326)) as longitude,
st_y(st_transform(the_geom, 4326)) as latitude
From underground_stations
group by name, longitude, latitude')
nrow(station_concs)
station_locations <- dbGetQuery(con, 'Select name,
line,
st_x(st_transform(the_geom, 4326)) as longitude,
st_y(st_transform(the_geom, 4326)) as latitude
From underground_stations
group by name, line, longitude, latitude')
nrow(station_concs)
##########
test <- station_concs %>%
mutate(pm25 = round(corrected_concentration,0)) %>%
rename(station = tube_diary_stop) %>%
select(-corrected_concentration) %>%
arrange(line, station) %>%
left_join(station_locations, by = c('line' = 'line', 'station' = 'name'))
nrow(test)
test
test[is.na(test$longitude),]
##########
station_concs %>%
mutate(pm25 = round(corrected_concentration,0)) %>%
rename(station = tube_diary_stop) %>%
select(-corrected_concentration) %>%
arrange(line, station) %>%
left_join(station_locations, by = c('line' = 'line', 'station' = 'name'))
station_concs %>%
mutate(pm25 = round(corrected_concentration,0)) %>%
rename(station = tube_diary_stop) %>%
select(-corrected_concentration) %>%
arrange(line, station) %>%
left_join(station_locations, by = c('line' = 'line', 'station' = 'name'))
##########
station_concs %>%
mutate(pm25 = round(corrected_concentration,0)) %>%
rename(station = tube_diary_stop) %>%
select(-corrected_concentration) %>%
arrange(line, station) %>%
left_join(station_locations, by = c('line' = 'line', 'station' = 'name')) %>%
write_csv('pm25_per_station_line.csv')
